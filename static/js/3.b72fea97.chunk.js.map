{"version":3,"sources":["App.tsx","main.tsx"],"names":["conf","EncoderConfig","setDim","setRdoLookaheadFrame","config_str","JSON","stringify","parse","toJSON","enc","Encoder","f","newFrame","App","useState","encoderStatus","setEncoderStatus","flushing","setFlushing","frameQ_length","setFrameQ_length","Array","packets","setPackets","disabled","onClick","sendFrame","flush","length","receivePacket","p","console","log","display","newPackets","from","push","e","String","style","whiteSpace","start","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAaMA,GAAO,IAAIC,KACfC,OAAO,GAAI,IACXC,qBAAqB,GAEjBC,EAAaC,KAAKC,UAAUD,KAAKE,MAAMP,EAAKQ,UAAW,KAAM,GAG7DC,EAAM,IAAIC,IAAQV,GAGlBW,EAAIF,EAAIG,WAEC,SAASC,IAAO,IAAD,EACaC,mBAAS,IADtB,mBACtBC,EADsB,KACPC,EADO,OAEGF,oBAAS,GAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGaJ,mBAAS,GAHtB,mBAGtBK,EAHsB,KAGPC,EAHO,OAICN,mBAASO,SAJV,mBAItBC,EAJsB,KAIbC,EAJa,KAmC7B,OACC,6BACC,kDAEA,4BAAQC,SAAUP,EAAUQ,QAjCZ,WACjBhB,EAAIiB,UAAUf,GACdS,EAAiBD,EAAgB,KA+BhC,cACA,4BAAQK,SAAUP,GAA8B,IAAlBE,EAAqBM,QA7BvC,WACbhB,EAAIkB,QACJT,GAAY,KA2BX,SACA,4BAAQM,SAAWF,EAAQM,SAAWT,EAAgBM,QAzBlC,SAAhBI,IACL,IACC,IAAMC,EAAIrB,EAAIoB,gBACdE,QAAQC,IAAIF,EAAEG,WACdjB,EAAiB,IAGjB,IAAMkB,EAAab,MAAMc,KAAKb,GAC9BY,EAAWE,KAAKN,GAChBP,EAAWW,GACV,MAAOG,GACE,YAANA,EACHR,IACgB,mBAANQ,GACVrB,EAAiBqB,EAAI,+CAWtB,kBAEA,+CAAqBlB,EAAgBG,EAAQM,QAC7C,wCAAcU,OAAOrB,IACrB,8CAAoBF,GAEpB,iCACC,mDACA,uBAAGwB,MAAO,CAAEC,WAAY,aAAepC,IAGpB,IAAnBkB,EAAQM,OAAe,+CAA2B,8BACnD,wBAAIa,MAAO,GAAKnB,EAAQoB,KAAI,SAACZ,GAAD,OAAO,wBAAIa,IAAKb,EAAEG,WAAYH,EAAEG,gBCjE/DW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjC,EAAD,OAEFkC,SAASC,eAAe","file":"static/js/3.b72fea97.chunk.js","sourcesContent":["// Copyright (c) 2020, The rav1e contributors. All rights reserved\n//\n// This source code is subject to the terms of the BSD 2 Clause License and\n// the Alliance for Open Media Patent License 1.0. If the BSD 2 Clause License\n// was not distributed with this source code in the LICENSE file, you can\n// obtain it at www.aomedia.org/license/software. If the Alliance for Open\n// Media Patent License 1.0 was not distributed with this source code in the\n// PATENTS file, you can obtain it at www.aomedia.org/license/patent.\n\nimport React, { useState } from 'react';\nimport { Encoder, EncoderConfig, Packet } from \"rav1e\";\n\n// Configuration for encoder\nconst conf = new EncoderConfig()\n\t.setDim(64, 96)\n\t.setRdoLookaheadFrame(1);\n// JSON-string representing configuration\nconst config_str = JSON.stringify(JSON.parse(conf.toJSON()), null, 4);\n\n// Encoder\nconst enc = new Encoder(conf);\n\n// Frame to send to encoder\nconst f = enc.newFrame();\n\nexport default function App() {\n\tconst [encoderStatus, setEncoderStatus] = useState(\"\");\n\tconst [flushing, setFlushing] = useState(false);\n\tconst [frameQ_length, setFrameQ_length] = useState(0);\n\tconst [packets, setPackets] = useState(Array<Packet>())\n\n\tconst sendFrame = () => {\n\t\tenc.sendFrame(f);\n\t\tsetFrameQ_length(frameQ_length + 1);\n\t};\n\n\tconst flush = () => {\n\t\tenc.flush();\n\t\tsetFlushing(true);\n\t}\n\n\tconst receivePacket = () => {\n\t\ttry {\n\t\t\tconst p = enc.receivePacket();\n\t\t\tconsole.log(p.display());\n\t\t\tsetEncoderStatus(\"\");\n\n\t\t\t// append new packet\n\t\t\tconst newPackets = Array.from(packets);\n\t\t\tnewPackets.push(p);\n\t\t\tsetPackets(newPackets);\n\t\t} catch (e) {\n\t\t\tif (e === \"encoded\") {\n\t\t\t\treceivePacket();\n\t\t\t} else if (e === \"need more data\") {\n\t\t\t\tsetEncoderStatus(e + \" (send more frames or flush the encoder)\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Rav1e_js live demo</h1>\n\n\t\t\t<button disabled={flushing} onClick={sendFrame}>Send Frame</button>\n\t\t\t<button disabled={flushing || frameQ_length === 0} onClick={flush}>Flush</button>\n\t\t\t<button disabled={(packets.length === frameQ_length)} onClick={receivePacket}>Receive Packet</button>\n\n\t\t\t<p>Frames in queue: {frameQ_length - packets.length}</p>\n\t\t\t<p>Flushing: {String(flushing)}</p>\n\t\t\t<p>Encoder Status: {encoderStatus}</p>\n\n\t\t\t<details>\n\t\t\t\t<summary>Encoder Config</summary>\n\t\t\t\t<p style={{ whiteSpace: \"pre-wrap\" }}>{config_str}</p>\n\t\t\t</details>\n\n\t\t\t{packets.length !== 0 ? <h3>Encoded packets</h3> : <div></div>}\n\t\t\t<ol start={0} >{packets.map((p) => <li key={p.display()}>{p.display()}</li>)}</ol>\n\t\t</div>\n\t);\n}\n","// Copyright (c) 2020, The rav1e contributors. All rights reserved\n//\n// This source code is subject to the terms of the BSD 2 Clause License and\n// the Alliance for Open Media Patent License 1.0. If the BSD 2 Clause License\n// was not distributed with this source code in the LICENSE file, you can\n// obtain it at www.aomedia.org/license/software. If the Alliance for Open\n// Media Patent License 1.0 was not distributed with this source code in the\n// PATENTS file, you can obtain it at www.aomedia.org/license/patent.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}